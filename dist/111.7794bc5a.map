{"version":3,"file":"111.xxxxxxxx.js","mappings":"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","sources":["webpack://sen/./node_modules/@toruslabs/solana-embed/dist/solanaEmbed.esm.js","webpack://sen/./node_modules/@web3auth/torus-solana-adapter/dist/torusSolanaAdapter.esm.js","webpack://sen/./node_modules/fast-deep-equal/index.js","webpack://sen/./node_modules/is-stream/index.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { PublicKey } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\n\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nvar log = loglevel.getLogger(\"solana-embed\");\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"windowRefs\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n\n      return;\n    } // Add to collection only if window is opened\n\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n\n}\n\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n}\n\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationProvider\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    const {\n      success\n    } = await this.communicationProvider.request({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo\n      }\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n\n    this.communicationProvider._handleWindow(windowId);\n\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n\n  async getAccounts() {\n    const response = await this.provider.request({\n      method: \"getAccounts\",\n      params: []\n    });\n    return response;\n  }\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      params: {\n        message: transaction.serializeMessage().toString(\"hex\"),\n        messageOnly: true\n      }\n    }); // reconstruct signature pair\n\n    const parsed = JSON.parse(response);\n    const signature = {\n      publicKey: new PublicKey(parsed.publicKey),\n      signature: Buffer.from(parsed.signature, \"hex\")\n    };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const encodedMessage = transactions.map(tx => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedMessage,\n        messageOnly: true\n      }\n    }); // reconstruct signature pairs\n\n    const signatures = responses.map(item => {\n      const parsed = JSON.parse(item);\n      return {\n        publicKey: new PublicKey(parsed.publicKey),\n        signature: Buffer.from(parsed.signature, \"hex\")\n      };\n    });\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n\n        _payload.windowId = windowId;\n      }\n\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n\n        }); // for communication methods sending window id in jrpc req params\n\n\n        _payload.params.windowId = windowId;\n      }\n\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };\n//# sourceMappingURL=solanaEmbed.esm.js.map\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/solana-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, ADAPTER_EVENTS, WalletInitializationError, WalletLoginError } from '@web3auth/base';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\nimport log from 'loglevel';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaWalletAdapter extends BaseAdapter {\n  constructor() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(this, \"torusInstance\", null);\n\n    _defineProperty(this, \"torusWalletOptions\", void 0);\n\n    _defineProperty(this, \"initParams\", void 0);\n\n    _defineProperty(this, \"loginSettings\", {});\n\n    _defineProperty(this, \"solanaProvider\", null);\n\n    _defineProperty(this, \"rehydrated\", false);\n\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider() {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      var _this$solanaProvider;\n\n      return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n    }\n\n    return null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    let network;\n\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const {\n        blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        rpcTarget,\n        chainId\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        logo: \"\"\n      };\n    } else {\n      const {\n        chainId,\n        blockExplorer,\n        displayName,\n        rpcTarget,\n        ticker,\n        tickerName\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        tickerName,\n        ticker,\n        logo: \"\"\n      };\n    }\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    await this.torusInstance.init(_objectSpread(_objectSpread({\n      showTorusButton: false\n    }, this.initParams), {}, {\n      network\n    }));\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, {\n      adapter: WALLET_ADAPTERS.TORUS_SOLANA\n    });\n\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      await this.solanaProvider.setupProvider(this.torusInstance.provider);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n        reconnected: this.rehydrated\n      });\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(_) {}\n\n}\n\nexport { SolanaWalletAdapter };\n//# sourceMappingURL=torusSolanaAdapter.esm.js.map\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n"],"names":["messages","chainId","concat","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","configuration","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","window","location","hostname","log","getWindowId","Math","random","toString","slice","getTorusUrl","async","torusUrl","logLevel","buildEnv","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","_ref","w","h","dualScreenLeft","undefined","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","abs","top","BaseProvider","constructor","connectionStream","maxEventListeners","jsonRpcStreamName","super","this","duplex","Error","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ignoreStream","jsonRpcConnection","stream","createStream","rpcEngine","push","req","res","next","method","error","ethErrors","message","data","done","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","length","Promise","resolve","reject","send","payload","callback","streamName","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","logStreamDisconnectWarning","documentReady","readyState","handle","eventName","handler","_len","arguments","handlerArgs","_key","handlerWrapper","removeEventListener","addEventListener","handleEvent","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","features","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","replace","ownKeys$2","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","TorusCommunicationProvider","_state","i","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread$2","_defaultState","dappStorageKey","languageTranslations","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","getUserLanguage","embedTranslations","windowRefs","on","isConnected","isFullScreen","rid","_displayIframe","isFull","windowId","_createPopupBlockAlert","_handleCloseWindow","currentLoginProvider","isLoggedIn","isIFrameFullScreen","torusAlertContainer","torusIframe","info","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","once","style","display","right","bottom","torusWidgetVisibility","buttonPosition","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","attachOnLoad","remove","children","bindOnLoad","ownKeys$1","hasEmittedConnection","TorusInPageProvider","_objectSpread$1","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","accounts","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","ownKeys","_objectSpread","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","isLocalStorageAvailable","type","storage","x","setItem","removeItem","code","name","storageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","enableLogging","network","useLocalStorage","apiKey","extraParams","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","body","dappMetadata","getSiteMetadata","contentWindow","postMessage","_setupWeb3","torus","handleSetup","loginProvider","provider","login_hint","loginParams","privateKey","userInfo","success","logout","clearInit","isElement","element","Element","Document","contains","path","instanceId","finalPath","searchParams","transaction","serialize","requireAllSignatures","response","serializeMessage","messageOnly","parsed","JSON","parse","signature","publicKey","Buffer","addSignature","transactions","encodedMessage","map","tx","signatures","item","idx","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","login","then","catch","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","SolanaWalletAdapter","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","_this$solanaProvider","status","solanaProvider","_","options","checkInitializationRequirements","blockExplorer","displayName","rpcTarget","ticker","tickerName","blockExplorerUrl","logo","torusInstance","init","TorusInjectedProvider","config","autoConnect","rehydrated","connect","checkConnectionRequirements","adapter","setupProvider","reconnected","cleanup","getUserInfo","setAdapterSettings","module","exports","equal","a","b","RegExp","flags","valueOf","isStream","pipe","writable","_write","_writableState","readable","_read","_readableState","transform","_transform"],"sourceRoot":""}