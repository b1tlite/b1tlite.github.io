{"version":3,"file":"62.index.bundle.js","mappings":"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KAAK8K,GAAUoT,KAS3GzsB,EAAQsrB,KAAO,SAAUvW,EAAWM,GAEhC,OAAO/G,EAAOC,KAAKqY,EAAU0E,KAAKkB,WAAWje,KAAKwG,GAAYyX,WAAWje,KAAK8G,GAAa,MAE/FrV,EAAQqrB,WAAa,SAAUtW,EAAWM,EAAYoX,GAIlD,GAAyB,KAArB1X,EAAUzV,QAAsC,KAArByV,EAAUzV,OACrC,MAAM,IAAIotB,WAAW,gCAGzB,GAA0B,KAAtBrX,EAAW/V,OACX,MAAM,IAAIotB,WAAW,iCAEzB,OAAOpe,EAAOC,KAAK+d,EAAYjB,WAAWmB,WAAWje,KAAKwG,GAAYyX,WAAWje,KAAK8G,GAAaoX,yDCtSvG3sB,OAAOC,eAAeC,EAAS,aAAc,CAAER,OAAO,IACtD,IAAIkuB,EAAmCpf,EAAOC,KAAK,CAE/C,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEAof,EAAqCrf,EAAOC,KAAK,CAEjD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEJvO,EAAQqsB,iBAAmB,SAAUhX,EAAYN,EAAW0X,QACrC,IAAfA,IAAyBA,GAAa,GAC1C,IAAI3a,EAASxD,EAAOC,KAAKke,EAAaiB,EAAmCC,GAGzE,OAFAtY,EAAWtE,KAAKe,EAAQ2a,EAAa,EAAI,GACzC1X,EAAUhE,KAAKe,EAAQ2a,EAAa,IAAM,KACnC3a,GAEX9R,EAAQosB,iBAAmB,SAAU/W,GACjC,IAAI/V,EAAS+V,EAAW/V,OAEpBsN,EAAQ,EACZ,GAAItN,EAASsN,EAAQ,GAA2B,KAAtByI,EAAWzI,GACjC,OAAO,KAGX,GAAItN,GAFJsN,GAAS,GAEY,KAA2B,IAApByI,EAAWzI,IACnC,OAAO,KACX,IAAIghB,EAA2B,IAApBvY,EAAWzI,GAEtB,GAAIghB,EAAO,GAAKA,EAAO,EACnB,OAAO,KACX,GAAItuB,GAHJsN,GAAS,GAGYghB,EACjB,OAAO,KAEX,IAAIC,EAAMxY,EAAWzI,EAAQghB,EAAO,IAAMA,EAAO,EAAIvY,EAAWzI,EAAQghB,EAAO,IAAM,EAAI,GAEzF,OAAItuB,GADJsN,GAASghB,GACYC,GAGjBvuB,EAASsN,EAAQ,GACK,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","sources":["webpack://sen/./node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack://sen/./node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack://sen/./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack://sen/./node_modules/@ethereumjs/common/dist.browser/index.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/index.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/types.js","webpack://sen/./node_modules/@ethereumjs/tx/dist.browser/util.js","webpack://sen/./node_modules/@metamask/eth-sig-util/dist/encryption.js","webpack://sen/./node_modules/@metamask/eth-sig-util/dist/index.js","webpack://sen/./node_modules/@metamask/eth-sig-util/dist/personal-sign.js","webpack://sen/./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js","webpack://sen/./node_modules/@metamask/eth-sig-util/dist/utils.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/account.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/constants.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/object.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js","webpack://sen/./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/signature.js","webpack://sen/./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js","webpack://sen/./node_modules/crc-32/crc32.js","webpack://sen/./node_modules/tweetnacl-util/nacl-util.js"],"sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = require(\"./legacyTransaction\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } });\nvar eip2930Transaction_1 = require(\"./eip2930Transaction\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", { enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } });\nvar transactionFactory_1 = require(\"./transactionFactory\");\nObject.defineProperty(exports, \"TransactionFactory\", { enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } });\nvar eip1559Transaction_1 = require(\"./eip1559Transaction\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", { enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = {\n            common: this.common,\n        };\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            !v.eqn(0) &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = void 0;\nconst nacl = __importStar(require(\"tweetnacl\"));\nconst naclUtil = __importStar(require(\"tweetnacl-util\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encrypt({ publicKey, data, version, }) {\n    if (utils_1.isNullish(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(version)) {\n        throw new Error('Missing version parameter');\n    }\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof data !== 'string') {\n                throw new Error('Message data must be given as a string');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: naclUtil.encodeBase64(nonce),\n                ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n                ciphertext: naclUtil.encodeBase64(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encryptSafely({ publicKey, data, version, }) {\n    if (utils_1.isNullish(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(version)) {\n        throw new Error('Missing version parameter');\n    }\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    if (typeof data === 'object' && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMessage = JSON.stringify(dataWithPadding);\n    return encrypt({ publicKey, data: paddedMessage, version });\n}\nexports.encryptSafely = encryptSafely;\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decrypt({ encryptedData, privateKey, }) {\n    if (utils_1.isNullish(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            // string to buffer to UInt8Array\n            const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n            const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n            const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n            const ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey);\n            // return decrypted msg data\n            let output;\n            try {\n                output = naclUtil.encodeUTF8(decryptedMessage);\n            }\n            catch (err) {\n                throw new Error('Decryption failed.');\n            }\n            if (output) {\n                return output;\n            }\n            throw new Error('Decryption failed.');\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decryptSafely({ encryptedData, privateKey, }) {\n    if (utils_1.isNullish(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = nacl_decodeHex(privateKey);\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return naclUtil.encodeBase64(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex) {\n    const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n    return naclUtil.decodeBase64(msgBase64);\n}\n//# sourceMappingURL=encryption.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.concatSig = void 0;\n__exportStar(require(\"./personal-sign\"), exports);\n__exportStar(require(\"./sign-typed-data\"), exports);\n__exportStar(require(\"./encryption\"), exports);\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"concatSig\", { enumerable: true, get: function () { return utils_1.concatSig; } });\nObject.defineProperty(exports, \"normalize\", { enumerable: true, get: function () { return utils_1.normalize; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst utils_1 = require(\"./utils\");\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction personalSign({ privateKey, data, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const message = utils_1.legacyToBuffer(data);\n    const msgHash = ethereumjs_util_1.hashPersonalMessage(message);\n    const sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n    const serialized = utils_1.concatSig(ethereumjs_util_1.toBuffer(sig.v), sig.r, sig.s);\n    return serialized;\n}\nexports.personalSign = personalSign;\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nfunction recoverPersonalSignature({ data, signature, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    const sender = ethereumjs_util_1.publicToAddress(publicKey);\n    const senderHex = ethereumjs_util_1.bufferToHex(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nfunction extractPublicKey({ data, signature, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message, signature) {\n    const messageHash = ethereumjs_util_1.hashPersonalMessage(utils_1.legacyToBuffer(message));\n    return utils_1.recoverPublicKey(messageHash, signature);\n}\n//# sourceMappingURL=personal-sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature = exports.signTypedData = exports.typedSignatureHash = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = exports.SignTypedDataVersion = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst utils_1 = require(\"./utils\");\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion = exports.SignTypedDataVersion || (exports.SignTypedDataVersion = {}));\nexports.TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(version, allowedVersions) {\n    if (!Object.keys(SignTypedDataVersion).includes(version)) {\n        throw new Error(`Invalid version: '${version}'`);\n    }\n    else if (allowedVersions && !allowedVersions.includes(version)) {\n        throw new Error(`SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(', ')}`);\n    }\n}\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(types, name, type, value, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    if (types[type] !== undefined) {\n        return [\n            'bytes32',\n            version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n                ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                : ethereumjs_util_1.keccak(encodeData(type, value, types, version)),\n        ];\n    }\n    if (value === undefined) {\n        throw new Error(`missing value for field ${name} of type ${type}`);\n    }\n    if (type === 'bytes') {\n        return ['bytes32', ethereumjs_util_1.keccak(value)];\n    }\n    if (type === 'string') {\n        // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n        if (typeof value === 'string') {\n            value = Buffer.from(value, 'utf8');\n        }\n        return ['bytes32', ethereumjs_util_1.keccak(value)];\n    }\n    if (type.lastIndexOf(']') === type.length - 1) {\n        if (version === SignTypedDataVersion.V3) {\n            throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n        }\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField(types, name, parsedType, item, version));\n        return [\n            'bytes32',\n            ethereumjs_util_1.keccak(ethereumjs_abi_1.rawEncode(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [type, value];\n}\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encodedTypes = ['bytes32'];\n    const encodedValues = [hashType(primaryType, types)];\n    for (const field of types[primaryType]) {\n        if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n            continue;\n        }\n        const [type, value] = encodeField(types, field.name, field.type, data[field.name], version);\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return ethereumjs_abi_1.rawEncode(encodedTypes, encodedValues);\n}\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(primaryType, types) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies(primaryType, types);\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        const children = types[type];\n        if (!children) {\n            throw new Error(`No type definition specified: ${type}`);\n        }\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(primaryType, types, results = new Set()) {\n    [primaryType] = primaryType.match(/^\\w*/u);\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies(field.type, types, results);\n    }\n    return results;\n}\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    return ethereumjs_util_1.keccak(encodeData(primaryType, data, types, version));\n}\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(primaryType, types) {\n    return ethereumjs_util_1.keccak(encodeType(primaryType, types));\n}\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData(data) {\n    const sanitizedData = {};\n    for (const key in exports.TYPED_MESSAGE_SCHEMA.properties) {\n        if (data[key]) {\n            sanitizedData[key] = data[key];\n        }\n    }\n    if ('types' in sanitizedData) {\n        sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n    }\n    return sanitizedData;\n}\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const parts = [Buffer.from('1901', 'hex')];\n    parts.push(hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, version));\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, version));\n    }\n    return ethereumjs_util_1.keccak(Buffer.concat(parts));\n}\n/**\n * A collection of utility functions used for signing typed data.\n */\nexports.TypedDataUtils = {\n    encodeData,\n    encodeType,\n    findTypeDependencies,\n    hashStruct,\n    hashType,\n    sanitizeData,\n    eip712Hash,\n};\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nfunction typedSignatureHash(typedData) {\n    const hashBuffer = _typedSignatureHash(typedData);\n    return ethereumjs_util_1.bufferToHex(hashBuffer);\n}\nexports.typedSignatureHash = typedSignatureHash;\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const data = typedData.map(function (e) {\n        if (e.type !== 'bytes') {\n            return e.value;\n        }\n        return utils_1.legacyToBuffer(e.value);\n    });\n    const types = typedData.map(function (e) {\n        return e.type;\n    });\n    const schema = typedData.map(function (e) {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return ethereumjs_abi_1.soliditySHA3(['bytes32', 'bytes32'], [\n        ethereumjs_abi_1.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n        ethereumjs_abi_1.soliditySHA3(types, data),\n    ]);\n}\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction signTypedData({ privateKey, data, version, }) {\n    validateVersion(version);\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing private key parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const sig = ethereumjs_util_1.ecsign(messageHash, privateKey);\n    return utils_1.concatSig(ethereumjs_util_1.toBuffer(sig.v), sig.r, sig.s);\n}\nexports.signTypedData = signTypedData;\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nfunction recoverTypedSignature({ data, signature, version, }) {\n    validateVersion(version);\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const publicKey = utils_1.recoverPublicKey(messageHash, signature);\n    const sender = ethereumjs_util_1.publicToAddress(publicKey);\n    return ethereumjs_util_1.bufferToHex(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\n//# sourceMappingURL=sign-typed-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.recoverPublicKey = exports.concatSig = exports.legacyToBuffer = exports.isNullish = exports.padWithZeroes = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst ethjs_util_1 = require(\"ethjs-util\");\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nfunction padWithZeroes(hexString, targetLength) {\n    if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n        throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n    }\n    if (targetLength < 0) {\n        throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n    }\n    return String.prototype.padStart.call(hexString, targetLength, '0');\n}\nexports.padWithZeroes = padWithZeroes;\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nfunction isNullish(value) {\n    return value === null || value === undefined;\n}\nexports.isNullish = isNullish;\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nfunction legacyToBuffer(value) {\n    return typeof value === 'string' && !ethjs_util_1.isHexString(value)\n        ? Buffer.from(value)\n        : ethereumjs_util_1.toBuffer(value);\n}\nexports.legacyToBuffer = legacyToBuffer;\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nfunction concatSig(v, r, s) {\n    const rSig = ethereumjs_util_1.fromSigned(r);\n    const sSig = ethereumjs_util_1.fromSigned(s);\n    const vSig = ethereumjs_util_1.bufferToInt(v);\n    const rStr = padWithZeroes(ethereumjs_util_1.toUnsigned(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes(ethereumjs_util_1.toUnsigned(sSig).toString('hex'), 64);\n    const vStr = ethjs_util_1.stripHexPrefix(ethjs_util_1.intToHex(vSig));\n    return ethereumjs_util_1.addHexPrefix(rStr.concat(sStr, vStr));\n}\nexports.concatSig = concatSig;\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nfunction recoverPublicKey(messageHash, signature) {\n    const sigParams = ethereumjs_util_1.fromRpcSig(signature);\n    return ethereumjs_util_1.ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\nexports.recoverPublicKey = recoverPublicKey;\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalize(input) {\n    if (!input) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        const buffer = ethereumjs_util_1.toBuffer(input);\n        input = ethereumjs_util_1.bufferToHex(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return ethereumjs_util_1.addHexPrefix(input.toLowerCase());\n}\nexports.normalize = normalize;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\nvar secp256k1v3 = require('./secp256k1v3-lib/index');\nvar der = require('./secp256k1v3-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nexports.privateKeyVerify = function (privateKey) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        return false;\n    }\n    return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nexports.privateKeyExport = function (privateKey, compressed) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n    return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyImport = function (privateKey) {\n    // privateKeyImport method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    privateKey = der.privateKeyImport(privateKey);\n    if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n        return privateKey;\n    }\n    throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyNegate = function (privateKey) {\n    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyModInverse = function (privateKey) {\n    if (privateKey.length !== 32) {\n        throw new Error('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCreate = function (privateKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyConvert = function (publicKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.publicKeyVerify = function (publicKey) {\n    // secp256k1 v4 version throws when publicKey length is not 33 or 65\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCombine = function (publicKeys, compressed) {\n    var keys = [];\n    publicKeys.forEach(function (publicKey) {\n        keys.push(Uint8Array.from(publicKey));\n    });\n    return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureNormalize = function (signature) {\n    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureExport = function (signature) {\n    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImport = function (signature) {\n    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImportLax = function (signature) {\n    // signatureImportLax method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure that signature is greater than 0\n    if (signature.length === 0) {\n        throw new RangeError('signature length is invalid');\n    }\n    var sigObj = der.signatureImportLax(signature);\n    if (sigObj === null) {\n        throw new Error(\"couldn't parse DER signature\");\n    }\n    return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nexports.sign = function (message, privateKey, options) {\n    if (options === null) {\n        throw new TypeError('options should be an Object');\n    }\n    var signOptions = undefined;\n    if (options) {\n        signOptions = {};\n        if (options.data === null) {\n            // validate option.data length\n            throw new TypeError('options.data should be a Buffer');\n        }\n        if (options.data) {\n            if (options.data.length != 32) {\n                throw new RangeError('options.data length is invalid');\n            }\n            signOptions.data = new Uint8Array(options.data);\n        }\n        if (options.noncefn === null) {\n            throw new TypeError('options.noncefn should be a Function');\n        }\n        if (options.noncefn) {\n            // convert option.noncefn function signature\n            signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n                var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n                var bufferData = data != null ? Buffer.from(data) : null;\n                var buffer = Buffer.from('');\n                if (options.noncefn) {\n                    buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n                }\n                return new Uint8Array(buffer);\n            };\n        }\n    }\n    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n    return {\n        signature: Buffer.from(sig.signature),\n        recovery: sig.recid,\n    };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.verify = function (message, signature, publicKey) {\n    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.recover = function (message, signature, recid, compressed) {\n    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.ecdh = function (publicKey, privateKey) {\n    // note: secp256k1 v3 doesn't allow optional parameter\n    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    // ecdhUnsafe method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure valid publicKey length\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        throw new RangeError('public key length is invalid');\n    }\n    // ensure valid privateKey length\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n//# sourceMappingURL=secp256k1v3-adapter.js.map","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n//# sourceMappingURL=der.js.map","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\nvar EC = require('elliptic').ec;\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\nexports.privateKeyExport = function (privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var d = new BN(privateKey);\n    if (d.ucmp(ecparams.n) >= 0) {\n        throw new Error(\"couldn't export to DER format\");\n    }\n    var point = ec.g.mul(d);\n    return toPublicKey(point.getX(), point.getY(), compressed);\n};\nexports.privateKeyModInverse = function (privateKey) {\n    var bn = new BN(privateKey);\n    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n        throw new Error('private key range is invalid');\n    }\n    return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\nexports.signatureImport = function (sigObj) {\n    var r = new BN(sigObj.r);\n    if (r.ucmp(ecparams.n) >= 0) {\n        r = new BN(0);\n    }\n    var s = new BN(sigObj.s);\n    if (s.ucmp(ecparams.n) >= 0) {\n        s = new BN(0);\n    }\n    return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var point = ec.keyFromPublic(publicKey);\n    var scalar = new BN(privateKey);\n    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n        throw new Error('scalar was invalid (zero or overflow)');\n    }\n    var shared = point.pub.mul(scalar);\n    return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\nvar toPublicKey = function (x, y, compressed) {\n    var publicKey;\n    if (compressed) {\n        publicKey = Buffer.alloc(33);\n        publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    }\n    else {\n        publicKey = Buffer.alloc(65);\n        publicKey[0] = 0x04;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n        y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine, signMessage } from '@toruslabs/base-controllers';\nimport { createScaffoldMiddleware, createAsyncMiddleware, mergeMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, WalletLoginError, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { ethErrors } from 'eth-rpc-errors';\nimport log from 'loglevel';\nimport Common, { Hardfork } from '@ethereumjs/common';\nimport { TransactionFactory } from '@ethereumjs/tx';\nimport { personalSign, signTypedData, SignTypedDataVersion, getEncryptionPublicKey, decrypt } from '@metamask/eth-sig-util';\nimport { privateToAddress, stripHexPrefix } from 'ethereumjs-util';\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction resemblesAddress(str) {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nfunction createWalletMiddleware(_ref) {\n  let {\n    getAccounts,\n    getPrivateKey,\n    processDecryptMessage,\n    processEncryptionPublicKey,\n    processEthSignMessage,\n    processPersonalMessage,\n    processTransaction,\n    processSignTransaction,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4\n  } = _ref;\n\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  } //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n\n\n  async function validateAndNormalizeKeyholder(address, req) {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts = await getAccounts(req);\n      const normalizedAccounts = accounts.map(_address => _address.toLowerCase());\n      const normalizedAddress = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n\n    throw ethErrors.rpc.invalidParams({\n      message: \"Invalid parameters: must provide an Ethereum address.\"\n    });\n  } //\n  // account lookups\n  //\n\n\n  async function lookupAccounts(req, res) {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req, res) {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  } //\n  // transaction signatures\n  //\n\n\n  async function sendTransaction(req, res) {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams = req.params[0] || {\n      from: \"\"\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req, res) {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams = req.params[0] || {\n      from: \"\"\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from, req);\n    res.result = await processSignTransaction(txParams, req);\n  } //\n  // message signatures\n  //\n\n\n  async function ethSign(req, res) {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n      from: address,\n      data: message\n    });\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req, res) {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message = req.params[0];\n    const address = await validateAndNormalizeKeyholder(req.params[1], req);\n    const version = \"V1\";\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n      from: address,\n      data: message\n    });\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req, res) {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const version = \"V3\";\n    const msgParams = {\n      data: message,\n      from: address,\n      version\n    };\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req, res) {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const version = \"V4\";\n    const msgParams = {\n      data: message,\n      from: address,\n      version\n    };\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req, res) {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    } // process normally\n\n\n    const firstParam = req.params[0];\n    const secondParam = req.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n\n    const extraParams = req.params[2] || {}; // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n\n    let address, message;\n\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = \"The eth_personalSign method requires params ordered \";\n      warning += \"[message, address]. This was previously handled incorrectly, \";\n      warning += \"and has been corrected automatically. \";\n      warning += \"Please switch this param order for smooth behavior in the future.\";\n      res.warning = warning;\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n      from: address,\n      data: message\n    }); // eslint-disable-next-line require-atomic-updates\n\n\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req, res) {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req, res) {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext = req.params[0];\n    const address = await validateAndNormalizeKeyholder(req.params[1], req);\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n      from: address,\n      data: ciphertext\n    });\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req, res) {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage)\n  });\n}\n\nfunction createEthMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([createScaffoldMiddleware({\n    eth_syncing: false\n  }), createWalletMiddleware({\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage\n  })]);\n  return ethMiddleware;\n}\nfunction createChainSwitchMiddleware(_ref) {\n  let {\n    addChain,\n    switchChain\n  } = _ref;\n\n  async function addNewChain(req, res) {\n    var _req$params;\n\n    const chainParams = (_req$params = req.params) !== null && _req$params !== void 0 && _req$params.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n    res.result = await addChain(chainParams);\n  }\n\n  async function updateChain(req, res) {\n    var _req$params2;\n\n    const chainParams = (_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain)\n  });\n}\nfunction createAccountMiddleware(_ref2) {\n  let {\n    updatePrivatekey\n  } = _ref2;\n\n  async function updateAccount(req, res) {\n    var _req$params3;\n\n    const accountParams = (_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.length ? req.params[0] : undefined;\n    if (!(accountParams !== null && accountParams !== void 0 && accountParams.privateKey)) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount)\n  });\n} // #endregion account middlewares\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nfunction getProviderHandlers$1(_ref) {\n  let {\n    connector\n  } = _ref;\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async _ => {\n      const {\n        accounts\n      } = connector;\n\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams, _) => {\n      const result = await connector.sendTransaction(txParams);\n      return result;\n    },\n    processSignTransaction: async (txParams, _) => {\n      const result = await connector.signTransaction(txParams);\n      return result;\n    },\n    processEthSignMessage: async (msgParams, _) => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams, _) => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams, _) => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async _ => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processTypedMessageV4: async _ => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processEncryptionPublicKey: async _ => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: _ => {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n  };\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass WalletConnectProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      connector\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state: _objectSpread$1(_objectSpread$1({}, state || {}), {}, {\n        chainId: \"loading\",\n        accounts: []\n      })\n    });\n\n    _defineProperty(this, \"connector\", null);\n\n    this.connector = connector || null;\n  }\n\n  async enable() {\n    if (!this.connector) throw ethErrors.provider.custom({\n      message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n      code: 4902\n    });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(connector) {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  async switchChain(_ref2) {\n    let {\n      chainId\n    } = _ref2;\n    const currentChainConfig = this.getChainConfig(chainId);\n    const {\n      ticker,\n      tickerName,\n      rpcTarget\n    } = currentChainConfig;\n    this.update({\n      chainId: \"loading\"\n    });\n    await this.connector.updateChain({\n      chainId: Number.parseInt(chainId, 16),\n      nativeCurrency: {\n        name: tickerName,\n        symbol: ticker\n      },\n      networkId: Number.parseInt(chainId, 10),\n      rpcUrl: rpcTarget\n    });\n    this.configure({\n      chainConfig: currentChainConfig\n    });\n    await this.lookupNetwork(this.connector);\n  }\n\n  async lookupNetwork(connector) {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : \"0x\".concat(connector.chainId.toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  async setupEngine(connector) {\n    const providerHandlers = getProviderHandlers$1({\n      connector\n    });\n    this.update({\n      accounts: connector.accounts || []\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork(connector);\n  }\n\n  async onConnectorStateUpdate(connector) {\n    connector.on(\"session_update\", async (error, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n\n      const {\n        accounts,\n        chainId: connectedChainId,\n        rpcUrl\n      } = payload; // Check if accounts changed and trigger event\n\n      if (accounts !== null && accounts !== void 0 && accounts.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts\n        }); // await this.setupEngine(connector);\n\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n\n      const connectedHexChainId = isHexStrict(connectedChainId) ? connectedChainId : \"0x\".concat(connectedChainId.toString(16)); // Check if chainId changed and trigger event\n\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n            chainId: connectedHexChainId,\n            rpcTarget: rpcUrl\n          })\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n\n}\n\n_defineProperty(WalletConnectProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new WalletConnectProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.connector);\n  return providerFactory;\n});\n\nasync function getCommonConfiguration(supportsEIP1559, chainConfig) {\n  const {\n    displayName: name,\n    chainId\n  } = chainConfig;\n  const hardfork = supportsEIP1559 ? Hardfork.London : Hardfork.Berlin;\n  const customChainParams = {\n    name,\n    chainId: chainId === \"loading\" ? 0 : parseInt(chainId, 16),\n    networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 10),\n    hardfork\n  };\n  return Common.custom(customChainParams);\n}\n\nfunction getProviderHandlers(_ref) {\n  let {\n    privKey,\n    chainConfig,\n    getProviderEngineProxy\n  } = _ref;\n  return {\n    getAccounts: async _ => [\"0x\".concat(privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\"))],\n    getPrivateKey: async _ => privKey,\n    processTransaction: async (txParams, _) => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const common = await getCommonConfiguration(!!txParams.maxFeePerGas && !!txParams.maxPriorityFeePerGas, chainConfig);\n      const unsignedEthTx = TransactionFactory.fromTxData(txParams, {\n        common\n      });\n      const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n      const txHash = await providerEngineProxy.request({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))]\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams, _) => {\n      const common = await getCommonConfiguration(!!txParams.maxFeePerGas && !!txParams.maxPriorityFeePerGas, chainConfig);\n      const unsignedEthTx = TransactionFactory.fromTxData(txParams, {\n        common\n      });\n      const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n      return \"0x\".concat(signedTx.toString(\"hex\"));\n    },\n    processEthSignMessage: async (msgParams, _) => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams, _) => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({\n        privateKey: privKeyBuffer,\n        data: msgParams.data\n      });\n      return sig;\n    },\n    processTypedMessage: async (msgParams, _) => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({\n        privateKey: privKeyBuffer,\n        data: msgParams.data,\n        version: SignTypedDataVersion.V1\n      });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams, _) => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({\n        privateKey: privKeyBuffer,\n        data: msgParams.data,\n        version: SignTypedDataVersion.V3\n      });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams, _) => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({\n        privateKey: privKeyBuffer,\n        data: msgParams.data,\n        version: SignTypedDataVersion.V4\n      });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address, _) => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams, _) => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({\n        encryptedData: JSON.parse(buff.toString(\"utf8\")),\n        privateKey: privKey\n      });\n      return decrypted;\n    }\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass EthereumPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = getProviderHandlers({\n      privKey,\n      chainConfig: this.config.chainConfig,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine(); // Not a partial anymore because of checks in ctor\n\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"eth_private_key\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"eth_accounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"eth_private_key\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request({\n      method: \"net_version\",\n      params: []\n    });\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(\"Invalid network, net_version is: \".concat(network));\n    log.debug(\"this provider\", this.provider, chainId, this.state.chainId);\n\n    if (this.state.chainId !== chainId) {\n      this.provider.emit(\"chainChanged\", chainId);\n      this.provider.emit(\"connect\", {\n        chainId\n      });\n    }\n\n    this.update({\n      chainId\n    });\n    return network;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addChain: async params => {\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"ETH\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchChain: async params => {\n        const {\n          chainId\n        } = params;\n        await this.switchChain({\n          chainId\n        });\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async params => {\n        const {\n          privateKey\n        } = params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(EthereumPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new EthereumPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nexport { EthereumPrivateKeyProvider, WalletConnectProvider };\n//# sourceMappingURL=ethereumProvider.esm.js.map\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"names":["__values","this","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__importDefault","mod","__esModule","Object","defineProperty","exports","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","customChains","e_1","_a","names","mainnet","default","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","chain","name_1","name","chainId","toString","e_1_1","error","return","EIPs","hardforks","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","String","__","constructor","create","__assign","assign","t","n","arguments","apply","ConsensusAlgorithm","ConsensusType","Hardfork","Chain","CustomChain","events_1","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","Common","_super","opts","_b","_c","_this","_supportedHardforks","_eips","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","_d","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","concat","forCustomChain","customChainParams","isSupportedChainId","initializedChains","Boolean","BN","isBN","e_2","plainCustomChains","isArray","map","e","required_1","required_1_1","param","undefined","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","e_4_1","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","e_6_1","e_7","_loop_1","eip","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","v","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","index","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","push","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","gt","isNextHardforkBlock","e_15","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","e_15_1","inputBuffer","forkhash","intToBuffer","buf","data","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","copy","getPrototypeOf","removeAllListeners","EventEmitter","__createBinding","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__setModuleDefault","__importStar","result","__read","r","ar","BaseTransaction","common_1","types_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","nonce","gasLimit","to","type","_type","toBuffer","toNumber","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","supports","capability","validate","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","dataLength","Math","ceil","initCodeCost","imuln","iadd","publicKey","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","sign","privateKey","_errorMsg","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","_getCommon","values","bits","cannotEqual","entries","key","MAX_UINT64","MAX_INTEGER","_getSharedErrorPostfix","bufferToHex","baseTransaction_1","util_1","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","N_DIV_2","checkMaxInitCodeSize","freeze","fromTxData","fromSerializedTx","serialized","slice","equals","rlp","decode","fromValuesArray","fromRlpSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","gasPrice","min","sub","add","raw","bnToUnpaddedBuffer","serialize","base","encode","hashMessage","message","keccak256","getMessageToVerifySignature","ecrecover","toJSON","accessListJSON","getAccessListJSON","bnToHex","errorStr","AccessListEIP2930Transaction","yParity","__exportStar","TransactionFactory","Transaction","legacyTransaction_1","eip2930Transaction_1","transactionFactory_1","eip1559Transaction_1","_validateTxV","chainIdDoubled","muln","_getMessageToSign","rlphash","vBN","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","_1","txOptions","txType","fromSerializedData","EIP","fromBlockBodyData","isBuffer","getTransactionClass","transactionID","_common","isAccessList","isAccessListBuffer","input","firstItem","bufferAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","getEncryptionPublicKey","decryptSafely","decrypt","encryptSafely","encrypt","nacl","naclUtil","utils_1","version","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","encryptedData","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","output","encodeUTF8","msgHex","msgBase64","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","normalize","concatSig","extractPublicKey","recoverPersonalSignature","personalSign","getPublicKeyFor","signature","messageHash","hashPersonalMessage","legacyToBuffer","recoverPublicKey","sig","sender","recoverTypedSignature","signTypedData","typedSignatureHash","TypedDataUtils","TYPED_MESSAGE_SCHEMA","SignTypedDataVersion","ethereumjs_abi_1","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","keccak","encodeData","lastIndexOf","parsedType","typeValuePairs","rawEncode","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","schema","soliditySHA3","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","ethjs_util_1","hexString","targetLength","test","isHexString","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","stripHexPrefix","intToHex","addHexPrefix","sigParams","fromRpcSig","buffer","toLowerCase","importPublic","privateToPublic","privateToAddress","pubToAddress","isValidPublic","isValidPrivate","isPrecompiled","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isZeroAddress","isValidAddress","zeroAddress","assert","ethjsUtil","secp256k1","bytes_1","hash_1","addr","zeros","eip1191ChainId","prefix","ret","parseInt","toUpperCase","nonceBN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","unpad","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","baToJSON","stripZeros","setLengthRight","setLength","bytes","allocUnsafe","right","first","padToEven","toArrayLike","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","ripemd160","sha256","keccak224","keccak384","k256","keccak512","createHash","update","digest","padded","defineProperties","self","fields","_fields","label","obj_1","getter","setter","allowZero","allowLess","set","alias","keys_1","ecdhUnsafe","ecdh","recover","verify","signatureImportLax","signatureImport","signatureExport","signatureNormalize","publicKeyCombine","publicKeyTweakMul","publicKeyTweakAdd","privateKeyTweakMul","privateKeyTweakAdd","privateKeyModInverse","privateKeyNegate","privateKeyImport","privateKeyExport","secp256k1v3","der","Uint8Array","compressed","RangeError","tweak","publicKeys","sigObj","options","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","point","g","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","isValidSignature","toRpcSig","calculateSigRecovery","isValidSigRecovery","senderPubKey","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","ownKeys$2","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread$2","target","source","getOwnPropertyDescriptors","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","async","validateAndNormalizeKeyholder","req","normalizedAccounts","_address","normalizedAddress","ethErrors","eth_accounts","res","eth_private_key","eth_coinbase","accounts","eth_sendTransaction","txParams","params","eth_signTransaction","eth_sign","msgParams","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","extraParams","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","eth_syncing","createChainIdMiddleware","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","networkMiddleware","ownKeys$1","_objectSpread$1","WalletConnectProvider","config","state","connector","super","chainConfig","chainNamespace","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_ref2","currentChainConfig","getChainConfig","ticker","tickerName","updateChain","nativeCurrency","symbol","rpcUrl","configure","lookupNetwork","connected","provider","connectedHexChainId","_","sendTransaction","signTransaction","signMessage","signPersonalMessage","getProviderHandlers$1","ethMiddleware","engine","updateProviderEngineProxy","on","payload","connectedChainId","getCommonConfiguration","supportsEIP1559","displayName","ownKeys","_objectSpread","providerFactory","EthereumPrivateKeyProvider","privKey","getProviderEngineProxy","providerEngineProxy","signedTx","privKeyBuffer","stripped","buff","getProviderHandlers","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","network","addChain","switchChain","wallet_addEthereumChain","_req$params","chainParams","rpcUrls","wallet_switchEthereumChain","_req$params2","createChainSwitchMiddleware","blockExplorerUrls","blockExplorer","updatePrivatekey","wallet_updateAccount","_req$params3","accountParams","createAccountMiddleware","updateAccount","factory","CRC32","T0","c","table","Int32Array","signed_crc_table","TT","T","out","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","charCodeAt","B","DO_NOT_EXPORT_CRC","root","f","module","util","validateBase64","unescape","encodeURIComponent","arr","fromCharCode","decodeURIComponent","escape","atob","btoa"],"sourceRoot":""}